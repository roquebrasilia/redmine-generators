{"name":"Redmine-generators","tagline":"Helpful generators for Redmine plugin authors.","body":"[![Build Status](https://travis-ci.org/xdissent/redmine-generators.png?branch=master)](https://travis-ci.org/xdissent/redmine-generators)\r\n[![Gem Version](https://badge.fury.io/rb/redmine-generators.png)](http://badge.fury.io/rb/redmine-generators)\r\n\r\n## Crash Course\r\n\r\nRecreate the [Redmine plugin tutorial](http://www.redmine.org/projects/redmine/wiki/Plugin_Tutorial)\r\nusing the `redmine:plugin` and `redmine:scaffold` generators:\r\n\r\n```console\r\n$ git clone https://github.com/redmine/redmine.git; cd redmine\r\n$ echo \"development:\\n  adapter: sqlite3\\n  database: db/dev.db\" > config/database.yml\r\n$ echo 'gem \"redmine-generators\", group: :development' >> Gemfile.local\r\n$ bundle --without rmagick   # Or whatever\r\n$ rails g redmine:plugin polls\r\n$ rails g redmine:scaffold polls poll question yes:integer no:integer\r\n$ rake generate_secret_token db:migrate redmine:plugins:migrate\r\n$ REDMINE_LANG=en rake redmine:load_default_data\r\n```\r\n\r\nAdd a `vote` method to the `Poll` model in `plugins/redmine_polls/app/models/poll.rb`:\r\n\r\n```ruby\r\ndef vote(answer)\r\n  increment(answer == \"yes\" ? :yes : :no)\r\nend\r\n```\r\n\r\nCreate a `vote` action for the `PollsController` in `plugins/redmine_polls/app/controllers/polls_controller.rb`:\r\n\r\n```ruby\r\ndef vote\r\n  @poll.vote params[:answer]\r\n  flash[:notice] = \"Voted #{params[:answer]}\" if @poll.save && !request.xhr?\r\n  respond_with(@poll) do |format|\r\n    format.js { render action: :show }\r\n  end\r\nend\r\n```\r\n\r\nCreate a member route in `plugins/redmine_polls/config/routes.rb` for the new\r\n`vote` action:\r\n\r\n```ruby\r\nscope \"/projects/:project_id\" do\r\n  resources :polls do\r\n    post \"vote\", on: :member\r\n  end\r\nend\r\n```\r\n\r\nAdd the `vote` method to the `respond_to :js` and `before_filter :find_poll`\r\nstatements:\r\n\r\n```ruby\r\nrespond_to :js, only: [:show, :new, :create, :edit, :update, :destroy, :vote]\r\n# ...\r\nbefore_filter :find_poll, only: [:show, :edit, :update, :destroy, :vote]\r\n```\r\n\r\nAdd voting links to `plugins/redmine_polls/app/views/polls/show.html.erb`:\r\n\r\n```erb\r\n<p>\r\n  <b>Vote:</b>\r\n  <%= link_to \"Yes\", vote_poll_path(@poll, answer: \"yes\"), method: :post %> |\r\n  <%= link_to \"No\", vote_poll_path(@poll, answer: \"no\"), method: :post %>\r\n</p>\r\n```\r\n\r\nAnd basically the same for `plugins/redmine_polls/app/views/polls/show.js.erb` \r\nbut using `remote: true` for AJAX links:\r\n\r\n```erb\r\n<p>\r\n  <b>Vote:</b>\r\n  <%= link_to \"Yes\", vote_poll_path(@poll, answer: \"yes\"), method: :post, remote: true %> |\r\n  <%= link_to \"No\", vote_poll_path(@poll, answer: \"no\"), method: :post, remote: true %>\r\n</p>\r\n```\r\n\r\nFinally, add a `:vote_polls` Redmine permission to the `:polls` project module \r\nin `plugins/redmine_polls/init.rb`:\r\n\r\n```ruby\r\n  project_module :polls do\r\n    # ...\r\n    permission :vote_polls, polls: [:vote]\r\n  end\r\n```\r\n\r\nStart the rails server if you haven't already with `rails s`. Grant voting \r\naccess to whichever roles you'd like at \r\n[http://localhost:3000/roles/permissions](http://localhost:3000/roles/permissions),\r\ncreate a project with the `:polls` module enabled, and start polling!\r\n\r\n\r\n## Available Generators\r\n\r\n* `redmine:plugin`\r\n* `redmine:project_menu`\r\n* `redmine:project_module`\r\n* `redmine:resource_route`\r\n* `redmine:scaffold`\r\n* `redmine:scaffold_controller`\r\n* `redmine:translation`\r\n\r\n\r\nThis project rocks and uses MIT-LICENSE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}